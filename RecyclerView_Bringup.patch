Index: app/src/main/res/layout/tab_logs_history.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/tab_logs_history.xml	(date 1424592606000)
+++ app/src/main/res/layout/tab_logs_history.xml	(revision )
@@ -1,14 +1,17 @@
 <?xml version="1.0" encoding="utf-8"?>
 <LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
     android:orientation="vertical" android:layout_width="match_parent"
     android:layout_height="match_parent"
     android:background="#ffff00">
 
-    <ListView
-        android:id="@+id/list_logs"
+    <android.support.v7.widget.RecyclerView
+        android:id="@+id/recyclerView"
         android:layout_width="match_parent"
-        android:layout_height="wrap_content"/>
-
+        android:layout_height="match_parent"
+        tools:context=".HomeActivity"
+        tools:listitem="@layout/list_item_swipe"
+        />
     <TextView
         android:id="@+id/no_items_text_view"
         android:layout_width="match_parent"
\ No newline at end of file
Index: app/src/main/java/com/finch/mycalls/SwipeListViewAdapter.java
===================================================================
--- app/src/main/java/com/finch/mycalls/SwipeListViewAdapter.java	(date 1424592606000)
+++ app/src/main/java/com/finch/mycalls/SwipeListViewAdapter.java	(date 1424592606000)
@@ -1,50 +0,0 @@
-package com.finch.mycalls;
-
-import android.content.Context;
-import android.view.LayoutInflater;
-import android.view.View;
-import android.view.ViewGroup;
-
-import com.daimajia.swipe.adapters.ArraySwipeAdapter;
-import com.daimajia.swipe.adapters.BaseSwipeAdapter;
-
-
-public class SwipeListViewAdapter extends BaseSwipeAdapter {
-    private Context mContext;
-
-    public SwipeListViewAdapter(Context mContext) {
-        this.mContext = mContext;
-    }
-
-    @Override
-    public int getSwipeLayoutResourceId(int position) {
-        return R.id.swipe_item;
-    }
-
-    //ATTENTION: Never bind listener or fill values in generateView.
-    //           You have to do that in fillValues method.
-    @Override
-    public View generateView(int position, ViewGroup parent) {
-        return LayoutInflater.from(mContext).inflate(R.layout.list_item_swipe, null);
-    }
-
-    @Override
-    public void fillValues(int position, View convertView) {
-
-    }
-
-    @Override
-    public int getCount() {
-        return 10;
-    }
-
-    @Override
-    public Object getItem(int position) {
-        return null;
-    }
-
-    @Override
-    public long getItemId(int position) {
-        return position;
-    }
-}
Index: app/src/main/java/com/finch/mycalls/RecyclerViewAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/finch/mycalls/RecyclerViewAdapter.java	(revision )
+++ app/src/main/java/com/finch/mycalls/RecyclerViewAdapter.java	(revision )
@@ -0,0 +1,78 @@
+package com.finch.mycalls;
+
+import android.support.v7.widget.RecyclerView;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.TextView;
+import android.widget.Toast;
+
+import com.daimajia.swipe.adapters.RecyclerSwipeAdapter;
+
+import java.util.List;
+
+/**
+ * Created by Saurabh on 22-02-2015.
+ */
+public class RecyclerViewAdapter extends
+        RecyclerSwipeAdapter<RecyclerViewAdapter.ListItemViewHolder> {
+
+    private List<CallDetails> items;
+
+    RecyclerViewAdapter(List<CallDetails> modelData) {
+        if (modelData == null) {
+            throw new IllegalArgumentException(
+                    "modelData must not be null");
+        }
+        this.items = modelData;
+    }
+
+    @Override
+    public ListItemViewHolder onCreateViewHolder(
+            ViewGroup viewGroup, int viewType) {
+        View itemView = LayoutInflater.
+                from(viewGroup.getContext()).
+                inflate(R.layout.list_item_swipe,
+                        viewGroup,
+                        false);
+        return new ListItemViewHolder(itemView);
+    }
+
+    @Override
+    public void onBindViewHolder(
+            ListItemViewHolder viewHolder, int position) {
+        CallDetails call = items.get(position);
+        viewHolder.name.setText(call.number);
+        viewHolder.number.setText(call.calltype);
+    }
+
+    @Override
+    public int getItemCount() {
+        return items.size();
+    }
+
+    @Override
+    public int getSwipeLayoutResourceId(int i) {
+        return R.id.swipe_item;
+    }
+
+
+    public final static class ListItemViewHolder extends RecyclerView.ViewHolder {
+        TextView name;
+        TextView number;
+
+        public ListItemViewHolder(View itemView) {
+            super(itemView);
+            name = (TextView) itemView.findViewById(R.id.nameItem);
+            number = (TextView) itemView.findViewById(R.id.numberItem);
+
+            itemView.setOnClickListener(new View.OnClickListener() {
+                @Override
+                public void onClick(View view) {
+
+                    Toast.makeText(view.getContext(), "onItemSelected: " , Toast.LENGTH_SHORT).show();
+                }
+            });
+        }
+    }
+}
\ No newline at end of file
Index: app/src/main/java/com/finch/mycalls/HomeActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/finch/mycalls/HomeActivity.java	(date 1424592606000)
+++ app/src/main/java/com/finch/mycalls/HomeActivity.java	(revision )
@@ -9,19 +9,23 @@
 import android.os.Message;
 import android.preference.PreferenceManager;
 import android.support.v7.app.ActionBarActivity;
+import android.support.v7.widget.DefaultItemAnimator;
+import android.support.v7.widget.LinearLayoutManager;
+import android.support.v7.widget.RecyclerView;
 import android.telephony.TelephonyManager;
 import android.view.View;
 import android.view.animation.Animation;
 import android.widget.Button;
 import android.widget.FrameLayout;
 import android.widget.LinearLayout;
-import android.widget.ListView;
 import android.widget.RelativeLayout;
 import android.widget.TextView;
 import android.widget.Toast;
 
 import java.text.SimpleDateFormat;
+import java.util.ArrayList;
 import java.util.Date;
+import java.util.List;
 
 
 public class HomeActivity extends ActionBarActivity {
@@ -48,8 +52,12 @@
 
     boolean firstTimeStart; //for hiding option menu
     public static AppGlobals appGlobals;
+    private RecyclerView recyclerView;
+    private RecyclerViewAdapter adapter;
 
+    private static List<CallDetails> logsHistoryData;
 
+
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
@@ -112,17 +120,20 @@
             e.commit();
         }
 
-
-
         if(!sp.getBoolean(AppGlobals.PKEY_FIRST_TIME,false)){
             firstTimeStart = true;
             startActivity(new Intent(this,SetupActivity.class));
             finish();
         } else {
+            logsHistoryData = AppGlobals.dbHelper.getLogsHistory();
             initUI();
         }
     }
 
+    public static final List<CallDetails> getLogsHistoryData() {
+        return new ArrayList<CallDetails>(logsHistoryData);
+    }
+
     private void initUI() {
 
         thisMonthButton = (Button) findViewById(R.id.this_month_button);
@@ -141,18 +152,35 @@
         actionBar = (RelativeLayout) findViewById(R.id.actionbar);
 
         actionBarTitleView = (TextView) findViewById(R.id.toolbar_title);
-
         actionBarTitleView.setText(new SimpleDateFormat("E, MMM d").format(new Date()));
 
+        recyclerView = (RecyclerView) findViewById(R.id.recyclerView);
+
+        LinearLayoutManager layoutManager = new LinearLayoutManager(this);
+        layoutManager.setOrientation(LinearLayoutManager.VERTICAL);
+        layoutManager.scrollToPosition(0);
+        recyclerView.setLayoutManager(layoutManager);
+        // allows for optimizations if all item views are of the same size:
+        recyclerView.setHasFixedSize(true);
+
+        /*RecyclerView.ItemDecoration itemDecoration =
+                new DividerItemDecoration(this, DividerItemDecoration.VERTICAL_LIST);
+        recyclerView.addItemDecoration(itemDecoration);*/
+
+        // this is the default;
+        // this call is actually only necessary with custom ItemAnimators
+        recyclerView.setItemAnimator(new DefaultItemAnimator());
+
+        List<CallDetails> items = HomeActivity.getLogsHistoryData();
+        adapter = new RecyclerViewAdapter(items);
+        recyclerView.setAdapter(adapter);
+
         thisMonthButton.setSelected(true);
     }
 
     @Override
     protected void onResume() {
         super.onResume();
-        final ListView numberlistView = (ListView) findViewById(R.id.list_logs);
-        SwipeListViewAdapter sw = new SwipeListViewAdapter(this);
-        numberlistView.setAdapter(sw);
 
        /* numberlistView.setOnScrollListener(new PixelScrollDetector(new PixelScrollDetector.PixelScrollListener() {
 
@@ -203,4 +231,7 @@
         }
         button.setSelected(true);
     }
+
+    //for RecyclerView
+
 }
